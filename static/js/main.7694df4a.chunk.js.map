{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","data-bs-theme","href","name","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","heading","style","color","value","onChange","event","target","placeholder","rows","handleUpClick","newText","toUpperCase","showAlert","handleLwClick","toLowerCase","handleCopy","copiedText","document","querySelector","select","navigator","clipboard","writeText","handleExtraSpace","split","join","Clear","length","Alert","alert","msg","App","darkMode","setDarkMode","setAlert","message","setTimeout","aboutus","body","backgroundColor","title","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7694df4a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) { // This is mendatory props should pass as a parameter\r\n\r\n\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode}`} data-bs-theme={`${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <a className=\"navbar-brand\" href=\"#\">{props.name}</a>  {/* This is how props is defined in component */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n        </li> \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\"  href=\"/about\">{props.aboutus}</a>\r\n        </li> */}\r\n        \r\n   \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className=\"form-check form-switch mx-2\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className={`form-check-label text-${props.mode==='dark'?'white':'dark'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='dark'?'Dark':'Light'} Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\n// Navbar.defaultProps={\r\n//   name:\"Default\",\r\n//   aboutus:\"Default about\"\r\n\r\n// }\r\n\r\nNavbar.propTypes={\r\n  name: PropTypes.string,\r\n  aboutus: PropTypes.string\r\n  }","import React ,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText]=useState(\"\");\r\n\r\n    //Handle upperclick function \r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        if(text==='' ){\r\n          props.showAlert('Please enter some text','warning');\r\n        }else{\r\n          props.showAlert('Text converted to Uppercase','success');\r\n        }\r\n        \r\n    }\r\n\r\n    //Handle clear text function \r\n    const Clear=()=>{\r\n      props.showAlert('Text cleared','danger');\r\n        setText(\"\")\r\n    }\r\n    const handleonchange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    //Handle Lowerclick function \r\n    const handleLwClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        if(text==='' ){\r\n          props.showAlert('Please enter some text','warning');\r\n        }else{\r\n          props.showAlert('Text converted to Lowercase','success');\r\n        }\r\n        \r\n    }\r\n    \r\n    //Handle copy function \r\n    const handleCopy=()=>{    \r\n        let copiedText=document.querySelector('#textArea');\r\n        copiedText.select();\r\n        navigator.clipboard.writeText(copiedText.value); \r\n        if(text==='' ){\r\n          props.showAlert('Please enter some text','warning');\r\n        }else{\r\n          props.showAlert('Text copied successfully','success'); \r\n        }\r\n             \r\n    }\r\n    \r\n    //Handle remove extra space function \r\n    const handleExtraSpace=()=>{\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      if(text===''){\r\n        props.showAlert('Please enter some text','warning');\r\n      }else{\r\n        props.showAlert('Extra space has been removed','success');\r\n      }\r\n      \r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container my-3\">\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"  mb-3\">\r\n        <textarea className={`form-control bg-${props.mode==='dark'?'white':'secondary'} text-${props.mode==='dark'?'dark':'white'}`} style={{ color:'black'}} value={text} onChange={handleonchange} placeholder=\"Enter text here..\" id=\"textArea\" rows=\"14\"></textarea>\r\n        </div>\r\n        {/* buttons for functionality */}\r\n        <button className=\"btn btn-primary m-2\" onClick={handleUpClick}>Convert to Upprcase</button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleLwClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary m-2\" onClick={handleExtraSpace}>Remove extra space</button>\r\n        <button className=\"btn btn-danger m-2\" onClick={Clear}>Clear TextArea</button>      \r\n     </div>\r\n     <div className=\"container my3\">\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{text.split(\"\").length*0.008} min read</p>\r\n        <h2>Preview</h2>\r\n        <p className='text-break'>{text}</p>\r\n     </div>\r\n    </>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert &&   <div className={`alert w-25 mt-3 fs-6 alert-${props.alert.type} position-absolute top-0 start-50 translate-middle-x `}  role=\"alert\">\r\n                       <strong>{props.alert.type}!!! </strong>: {props.alert.msg}\r\n                     </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\nimport { useState } from 'react';\n// import {BrowserRouter,Routes,Route} from 'react-router-dom';\n// import {BrowserRouter,Switch,Route} from 'react-router-dom'\n\n\nfunction App() {\nconst [darkMode, setDarkMode] = useState('dark');\nconst [alert, setAlert] = useState(null);\n\nconst showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n}\nconst toggleMode=()=>{\n  if(darkMode==='dark'){\n    setDarkMode('warning');\n    document.body.style.backgroundColor='black';\n    document.body.style.color='white';\n    document.title='TextUtil - Dark Mode';\n    showAlert('Dark mode has been enabled.','success');\n  }else{\n    setDarkMode('dark')\n    document.body.style.backgroundColor='white';\n    document.body.style.color='black';\n    document.title='TextUtil - Light Mode';\n    showAlert('Light mode has been enabled.','success');\n  }\n}\n\n\n  return (\n    <>   \n<Navbar name=\"TextUtil\" aboutus=\"About Us\" home=\"Home\" mode={darkMode} toggleMode={toggleMode}/> \n{/* The Navbar is the function based component. and this is how we use that component  ans title is the props passed to the Navbar component*/}\n{/* <Navbar/> */}\n<Alert alert={alert}/>\n<div className='container'>\n<TextForm heading=\"Enter text here to analyze\" showAlert={showAlert} mode='dark'/>\n{/*  */}\n{/* <BrowserRouter>\n  \n  <Routes>\n      <Route exact path='/' element={<TextForm heading=\"Enter text here to analyze\" showAlert={showAlert} mode='dark'/> }/>\n      <Route exact path='/about' element={<About/>}/>\n   \n\n  </Routes>\n\n</BrowserRouter> */}\n\n</div>\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}